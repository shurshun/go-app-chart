{{- if .Values.statefulSet }}
{{- $fullName := include "go-app.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "go-app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "go-app.name" . }}
    helm.sh/chart: {{ include "go-app.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
{{- if .Values.service.headless }}
  serviceName: {{ include "go-app.fullname" . }}-headless
{{- else }}
  serviceName: {{ include "go-app.fullname" . }}
{{- end }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicaCount }}
{{- with .Values.strategy }}
  updateStrategy:
{{ toYaml . | indent 6 }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "go-app.name" . }}
      helm.sh/chart: {{ include "go-app.chart" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "go-app.name" . }}
        helm.sh/chart: {{ include "go-app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      {{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
      {{- end }}
      annotations:
      {{- if .Values.configs }}
        checksum/app-configs: {{ include (print $.Template.BasePath "/app-configs.yaml") . | sha256sum }}
      {{- end }}
      {{- if .Values.env.open }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- if .Values.env.secret }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
    {{- with .Values.extraPodSpec }}
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
        {{ tpl .Values.affinity . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: {{ include "go-app.service-account" . }}
    {{- if or .Values.volumes .Values.persistence.enabled .Values.configs }}
      volumes:
    {{- end }}
    {{- with .Values.volumes }}
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "go-app.fullname" .) }}
      {{- end }}
      {{- if .Values.configs }}
        - name: app-configs
          secret:
            secretName: {{ $fullName }}-configs
      {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
    {{- end }}
  {{- if .Values.initContainers }}
      initContainers:
    {{- range $idx, $cnt := .Values.initContainers }}
        - name: {{ $cnt.name }}
        {{- if $cnt.image }}
          image: "{{ default $.Values.image.repository $cnt.image.repository }}:{{ default $.Values.image.tag $cnt.image.tag }}"
          imagePullPolicy: {{ default $.Values.image.pullPolicy $cnt.image.PullPolicy }}
        {{- else }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
        {{- end }}
        {{- with $cnt.extraSpec }}
{{ toYaml . | indent 10 }}
        {{- end }}
          command:
{{ toYaml $cnt.command | indent 12 }}
        {{- if or $.Values.env.secret $.Values.env.open }}
          envFrom:
          {{- if $.Values.env.secret }}
            - secretRef:
                name: {{ $fullName }}
          {{- end }}
          {{- if $.Values.env.open }}
            - configMapRef:
                name: {{ $fullName }}
          {{- end }}
        {{- end }}
        {{- if or $.Values.volumeMounts $.Values.persistence.enabled }}
          volumeMounts:
        {{- end }}
        {{- with $.Values.volumeMounts }}
{{ toYaml . | indent 12 }}
        {{- end }}
        {{- if $.Values.persistence.enabled }}
            - name: data
              mountPath: {{ $.Values.persistence.mountPath }}
        {{- end }}
    {{- end }}
  {{- end }}
      containers:
        - name: {{ include "go-app.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.command }}
          command:
{{ toYaml . | indent 12 }}
        {{- end }}
        {{- with .Values.args }}
          args:
{{ toYaml . | indent 12 }}
        {{- end }}
        {{- with .Values.extraSpec }}
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- if .Values.ports }}
          ports:
          {{- range $name, $data := .Values.ports }}
          {{- if not $data.external }}
            - name: {{ $name }}
              containerPort: {{ $data.port }}
              protocol: {{ default "TCP" $data.protocol }}
          {{- end }}
          {{- end }}
        {{- with (.Values.livenessProbe | default .Values.defaults.livenessProbe) }}
          livenessProbe:
{{ toYaml . | indent 12 }}
          {{- end }}
        {{- with (.Values.readinessProbe | default .Values.defaults.readinessProbe) }}
          readinessProbe:
{{ toYaml . | indent 12 }}
          {{- end }}
        {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
        {{- if .Values.resources.limits }}
          {{- with .Values.resources.limits.cpu }}
            - name: GOMAXPROCS
              value: {{ . | quote }}
          {{- end }}
        {{- end }}
        {{- with .Values.env.raw }}
{{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | toString | quote }}
{{- end }}
        {{- end }}
        {{- if or .Values.env.secret .Values.env.open }}
          envFrom:
          {{- if .Values.env.secret }}
            - secretRef:
                name: {{ include "go-app.name" . }}
          {{- end }}
          {{- if .Values.env.open }}
            - configMapRef:
                name: {{ include "go-app.name" . }}
          {{- end }}
        {{- end }}
        {{- if or .Values.volumeMounts .Values.persistence.enabled .Values.configs }}
          volumeMounts:
        {{- end }}
          {{- range $idx, $cfg := .Values.configs }}
            - name: app-configs
              mountPath: {{ $cfg.path }}
              subPath: {{ $cfg.name }}
              readOnly: true
          {{- end }}
        {{- with .Values.volumeMounts }}
{{ toYaml . | indent 12 }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
        {{- end }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.extraContainers }}
{{ toYaml . | indent 8 }}
      {{- end }}
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
{{- end }}
{{- end }}